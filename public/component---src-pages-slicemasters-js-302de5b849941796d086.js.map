{"version":3,"sources":["webpack:///./src/components/Pagination.js","webpack:///./src/pages/slicemasters.js"],"names":["PaginationStyles","styled","div","Pagination","pageSize","base","skip","totalCount","currentPage","totalPages","Math","ceil","prevPage","nextPage","hasNextPage","hasPrevPage","disabled","to","Array","from","length","map","_","i","className","SingleSlicemasterStyles","SlicemasterGridStyles","SlicesmastersPage","data","pageContext","slicemasters","nodes","SEO","title","parseInt","process","slicemaster","slug","current","key","id","name","fluid","image","asset","alt","description","query"],"mappings":"sPAIMA,EAAmBC,IAAOC,IAAV,mFAAGD,CAAH,iUAwBP,SAASE,EAAT,GAMX,IALFC,EAKC,EALDA,SAEAC,GAGC,EAJDC,KAIC,EAHDD,MACAE,EAEC,EAFDA,WACAC,EACC,EADDA,YAGMC,EAAaC,KAAKC,KAAKJ,EAAaH,GACpCQ,EAAWJ,EAAc,EACzBK,EAAWL,EAAc,EACzBM,EAAcD,GAAYJ,EAC1BM,EAAcH,EAAW,EAE/B,OACE,kBAACZ,EAAD,KACE,kBAAC,IAAD,CAAMgB,UAAWD,EAAaE,GAAOZ,EAAL,IAAaO,GAA7C,SAGCM,MAAMC,KAAK,CAAEC,OAAQX,IAAcY,KAAI,SAACC,EAAGC,GAAJ,OACtC,kBAAC,IAAD,CACEN,GAAOZ,EAAL,KAAakB,EAAI,EAAIA,EAAI,EAAI,IAC/BC,UAAiB,IAAND,GAA2B,IAAhBf,EAAoB,UAAY,IAErDe,EAAI,MAGT,kBAAC,IAAD,CAAMP,UAAWF,EAAaG,GAAOZ,EAAL,IAAaQ,GAA7C,U,gBChDAY,EAA0BxB,IAAOC,IAAV,4FAAGD,CAAH,gUA0BvByB,EAAwBzB,IAAOC,IAAV,0FAAGD,CAAH,sFAMZ,SAAS0B,EAAT,GAAmD,IAAtBC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,YAC1CC,EAAeF,EAAKE,aAAaC,MACvC,OACE,6BACE,kBAACC,EAAA,EAAD,CAAKC,MAAK,wBAAyBJ,EAAYrB,aAAe,KAC9D,kBAACL,EAAD,CACEC,SAAU8B,SAASC,KACnB7B,KAAMuB,EAAYvB,KAClBD,KAAK,gBACLE,WAAYqB,EAAKE,aAAavB,WAC9BC,YAAaqB,EAAYrB,aAAe,IAE1C,kBAACkB,EAAD,KACGI,EAAaT,KAAI,SAACe,GAAD,OAChB,kBAACX,EAAD,KACE,kBAAC,IAAD,CACER,GAAE,eAAiBmB,EAAYC,KAAKC,QACpCC,IAAKH,EAAYI,IAEjB,4BACE,0BAAMhB,UAAU,QAAQY,EAAYK,QAGxC,kBAAC,IAAD,CAAKC,MAAON,EAAYO,MAAMC,MAAMF,MAAOG,IAAI,KAC/C,uBAAGrB,UAAU,eAAeY,EAAYU,mBAQ7C,IAAMC,EAAK","file":"component---src-pages-slicemasters-js-302de5b849941796d086.js","sourcesContent":["import { Link } from 'gatsby';\r\nimport React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst PaginationStyles = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  border: 1px solid var(--grey);\r\n  margin: 2rem 0rem;\r\n  border-radius: 5px;\r\n  text-align: center;\r\n  & > * {\r\n    padding: 1rem;\r\n    flex: 1;\r\n    text-decoration: none;\r\n    border-right: 1px solid var(--grey);\r\n    &[aria-current],\r\n    &.current {\r\n      color: var(--red);\r\n    }\r\n    &[disabled] {\r\n      pointer-events: none;\r\n      color: var(--grey);\r\n    }\r\n  }\r\n`;\r\n\r\nexport default function Pagination({\r\n  pageSize,\r\n  skip,\r\n  base,\r\n  totalCount,\r\n  currentPage,\r\n}) {\r\n  // make some variables\r\n  const totalPages = Math.ceil(totalCount / pageSize);\r\n  const prevPage = currentPage - 1;\r\n  const nextPage = currentPage + 1;\r\n  const hasNextPage = nextPage <= totalPages;\r\n  const hasPrevPage = prevPage > 0;\r\n\r\n  return (\r\n    <PaginationStyles>\r\n      <Link disabled={!hasPrevPage} to={`${base}/${prevPage}`}>\r\n        &#8592;Prev\r\n      </Link>\r\n      {Array.from({ length: totalPages }).map((_, i) => (\r\n        <Link\r\n          to={`${base}/${i > 0 ? i + 1 : ''}`}\r\n          className={i === 0 && currentPage === 1 ? 'current' : ''}\r\n        >\r\n          {i + 1}\r\n        </Link>\r\n      ))}\r\n      <Link disabled={!hasNextPage} to={`${base}/${nextPage}`}>\r\n        Next&#8594;\r\n      </Link>\r\n    </PaginationStyles>\r\n  );\r\n}\r\n","import { graphql, Link } from \"gatsby\";\r\nimport Img from \"gatsby-image\";\r\nimport React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Pagination from \"../components/Pagination\";\r\nimport SEO from \"../components/SEO\";\r\n\r\nconst SingleSlicemasterStyles = styled.div`\r\n  padding: 2rem;\r\n  text-align: center;\r\n  a {\r\n    text-decoration: none;\r\n  }\r\n  .gatsby-image-wrapper {\r\n    height: 400px;\r\n  }\r\n  h2 {\r\n    transform: rotate(-2deg);\r\n    font-size: 4rem;\r\n    margin-bottom: -2rem;\r\n    position: relative;\r\n    z-index: 2;\r\n  }\r\n  .description {\r\n    background: var(--yellow);\r\n    padding: 1rem;\r\n    margin: 2rem;\r\n    margin-top: -6rem;\r\n    position: relative;\r\n    z-index: 2;\r\n    transform: rotate(1deg);\r\n  }\r\n`;\r\nconst SlicemasterGridStyles = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));\r\n  gap: 2rem;\r\n`;\r\n\r\nexport default function SlicesmastersPage({ data, pageContext }) {\r\n  const slicemasters = data.slicemasters.nodes;\r\n  return (\r\n    <div>\r\n      <SEO title={`Slicemasters - Page ${pageContext.currentPage || 1}`} />\r\n      <Pagination\r\n        pageSize={parseInt(process.env.GATSBY_PAGE_SIZE)}\r\n        skip={pageContext.skip}\r\n        base=\"/slicemasters\"\r\n        totalCount={data.slicemasters.totalCount}\r\n        currentPage={pageContext.currentPage || 1}\r\n      />\r\n      <SlicemasterGridStyles>\r\n        {slicemasters.map((slicemaster) => (\r\n          <SingleSlicemasterStyles>\r\n            <Link\r\n              to={`slicemaster/${slicemaster.slug.current}`}\r\n              key={slicemaster.id}\r\n            >\r\n              <h2>\r\n                <span className=\"mark\">{slicemaster.name}</span>\r\n              </h2>\r\n            </Link>\r\n            <Img fluid={slicemaster.image.asset.fluid} alt=\"\" />\r\n            <p className=\"description\">{slicemaster.description}</p>\r\n          </SingleSlicemasterStyles>\r\n        ))}\r\n      </SlicemasterGridStyles>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport const query = graphql`\r\n  query($skip: Int = 0, $pageSize: Int = 2) {\r\n    slicemasters: allSanityPerson(limit: $pageSize, skip: $skip) {\r\n      totalCount\r\n      nodes {\r\n        name\r\n        id\r\n        slug {\r\n          current\r\n        }\r\n        description\r\n        image {\r\n          asset {\r\n            fluid(maxWidth: 410) {\r\n              ...GatsbySanityImageFluid\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n"],"sourceRoot":""}